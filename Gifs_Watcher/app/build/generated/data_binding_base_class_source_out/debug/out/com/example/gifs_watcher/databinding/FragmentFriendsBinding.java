// Generated by view binder compiler. Do not edit!
package com.example.gifs_watcher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gifs_watcher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFriendsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView friendListTxt;

  @NonNull
  public final TextView pendingRequestTxt;

  @NonNull
  public final RecyclerView rvFriendsList;

  @NonNull
  public final RecyclerView rvPendingRequest;

  @NonNull
  public final ScrollView smooth;

  @NonNull
  public final TextView textNotifications2;

  private FragmentFriendsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView friendListTxt, @NonNull TextView pendingRequestTxt,
      @NonNull RecyclerView rvFriendsList, @NonNull RecyclerView rvPendingRequest,
      @NonNull ScrollView smooth, @NonNull TextView textNotifications2) {
    this.rootView = rootView;
    this.friendListTxt = friendListTxt;
    this.pendingRequestTxt = pendingRequestTxt;
    this.rvFriendsList = rvFriendsList;
    this.rvPendingRequest = rvPendingRequest;
    this.smooth = smooth;
    this.textNotifications2 = textNotifications2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFriendsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFriendsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_friends, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFriendsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.friend_list_txt;
      TextView friendListTxt = ViewBindings.findChildViewById(rootView, id);
      if (friendListTxt == null) {
        break missingId;
      }

      id = R.id.pending_request_txt;
      TextView pendingRequestTxt = ViewBindings.findChildViewById(rootView, id);
      if (pendingRequestTxt == null) {
        break missingId;
      }

      id = R.id.rv_friends_list;
      RecyclerView rvFriendsList = ViewBindings.findChildViewById(rootView, id);
      if (rvFriendsList == null) {
        break missingId;
      }

      id = R.id.rv_pending_request;
      RecyclerView rvPendingRequest = ViewBindings.findChildViewById(rootView, id);
      if (rvPendingRequest == null) {
        break missingId;
      }

      id = R.id.smooth;
      ScrollView smooth = ViewBindings.findChildViewById(rootView, id);
      if (smooth == null) {
        break missingId;
      }

      id = R.id.text_notifications2;
      TextView textNotifications2 = ViewBindings.findChildViewById(rootView, id);
      if (textNotifications2 == null) {
        break missingId;
      }

      return new FragmentFriendsBinding((ConstraintLayout) rootView, friendListTxt,
          pendingRequestTxt, rvFriendsList, rvPendingRequest, smooth, textNotifications2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
