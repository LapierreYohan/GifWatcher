// Generated by view binder compiler. Do not edit!
package com.example.gifs_watcher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gifs_watcher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PendingRequestBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView IvPreview;

  @NonNull
  public final ConstraintLayout friendCard;

  @NonNull
  public final TextView tvSubTitle;

  @NonNull
  public final TextView tvTitle;

  private PendingRequestBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView IvPreview,
      @NonNull ConstraintLayout friendCard, @NonNull TextView tvSubTitle,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.IvPreview = IvPreview;
    this.friendCard = friendCard;
    this.tvSubTitle = tvSubTitle;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PendingRequestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PendingRequestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pending_request, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PendingRequestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Iv_preview;
      ImageView IvPreview = ViewBindings.findChildViewById(rootView, id);
      if (IvPreview == null) {
        break missingId;
      }

      id = R.id.friend_card;
      ConstraintLayout friendCard = ViewBindings.findChildViewById(rootView, id);
      if (friendCard == null) {
        break missingId;
      }

      id = R.id.tv_subTitle;
      TextView tvSubTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSubTitle == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new PendingRequestBinding((ConstraintLayout) rootView, IvPreview, friendCard,
          tvSubTitle, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
